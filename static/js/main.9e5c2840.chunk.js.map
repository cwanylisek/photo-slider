{"version":3,"sources":["assets/img/kircholm.jpg","assets/img/nature.jpg","assets/img/ramen.jpg","contexts/PhotoContext.js","components/Navbar/Navbar.js","components/Slide/Slide.js","components/Slider/Slider.js","components/AddPhoto/AddPhoto.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PhotoContext","createContext","PhotoContextProvider","props","useState","photo","kircholm","text","category","id","landscape","ramen","photos","setPhoto","photoIndex","setIndex","translateValue","setTranslate","newImage","setNewImage","useEffect","imageData","localStorage","getItem","fetch","then","res","blob","URL","createObjectURL","uuid","removeItem","Provider","value","deletePhoto","index","splicedPhotos","splice","filterPhotos","filter","addPhoto","rightArrow","length","leftArrow","saveImage","children","Navbar","routeButton","useContext","options","map","item","label","styles","control","provided","state","background","border","boxSizing","borderRadius","width","height","padding","menu","zIndex","container","selectedOption","useLocation","pathname","to","className","onChange","console","log","categorySelected","placeholder","theme","colors","primary25","primary","Slide","image","click","backgroundImage","backgroundSize","backgroundRepeat","style","onClick","Slider","slide","i","key","slideAnimation","transform","transition","AddPhoto","photoInput","useRef","getBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","onSubmit","e","preventDefault","persist","target","display","type","event","files","Base64","debug","ref","current","name","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e5c2840.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kircholm.3df142d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nature.462ac6ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ramen.bcadb9e7.jpg\";","import React, { createContext, useState, useEffect } from 'react'\nimport kircholm from '../assets/img/kircholm.jpg'\nimport landscape from '../assets/img/nature.jpg'\nimport ramen from '../assets/img/ramen.jpg'\nimport uuid from 'uuid/v1'\n\nexport const PhotoContext = createContext()\n\nconst PhotoContextProvider = (props) => {\n    const [photos, setPhoto] = useState([\n        { photo: kircholm, text: 'lorem ipsum 1', category: 'art', id: 1 },\n        { photo: landscape, text: 'lorem ipsum 2', category: 'nature', id: 2 },\n        { photo: ramen, text: 'lorem ipsum 3', category: 'food', id: 3 }\n    ])\n\n    const [photoIndex, setIndex] = useState(0)\n\n    const [translateValue, setTranslate] = useState(0)\n\n    const [newImage, setNewImage] = useState({})\n\n    const addPhoto = (photo, text, category) => {\n        setPhoto([...photos, { photo, text, category, id: uuid() }])\n    }\n\n    const filterPhotos = (category) => {\n        setPhoto(photos.filter(photo => photo.category === category))\n    }\n\n    const deletePhoto = (index) => {\n\n        let splicedPhotos = photos\n        splicedPhotos.splice(index, 1)\n        setPhoto([...splicedPhotos])\n\n    }\n\n    const rightArrow = () => {\n        if (photoIndex === photos.length - 1) {\n            setIndex(0)\n            setTranslate(0)\n        } else {\n            setIndex(photoIndex + 1)\n            setTranslate(translateValue + -(500))\n        }\n    }\n\n    const leftArrow = () => {\n        if (photoIndex === 0) {\n            return\n        } else {\n            setIndex(photoIndex - 1)\n            setTranslate(translateValue + 500)\n        }\n    }\n\n    const saveImage = (newImage) => {\n        setNewImage(newImage)\n    }\n\n    useEffect(() => {\n        const imageData = localStorage.getItem('photoBase64')\n        if (imageData != null) {\n            fetch(imageData)\n                .then(res => res.blob())\n                .then(res => setPhoto(photos => [...photos, { photo: URL.createObjectURL(res), text: 'from LS', category: 'LS', id: uuid() }]))\n        }\n        localStorage.removeItem('photoBase64')\n    }, [])\n\n    return (\n        <PhotoContext.Provider value={{ photos, deletePhoto, filterPhotos, addPhoto, rightArrow, leftArrow, photoIndex, translateValue, newImage, saveImage }}>\n            {props.children}\n        </PhotoContext.Provider>\n    )\n}\n\nexport default PhotoContextProvider;","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\nimport { PhotoContext } from '../../contexts/PhotoContext'\nimport Select from 'react-select'\nimport './Navbar.scss'\n\nconst Navbar = () => {\n\n    const { photos, filterPhotos } = useContext(PhotoContext)\n\n    const options = photos.map(item => ({\n        value: item.category,\n        label: item.category\n    }))\n\n    const styles = {\n        control: (provided, state) => ({\n            ...provided,\n            background: '#FDFDFD',\n            border: '1px solid rgba(248, 41, 73, 0.25)',\n            boxSizing: 'border-box',\n            borderRadius: '20px',\n            width: '90%',\n            height: '32px',\n            padding: '0 15px'\n        }),\n        menu: (provided) => ({\n            ...provided,\n            width: '80%',\n            zIndex: '110',\n        }),\n        container: (provided) => ({\n            ...provided,\n            width: '30%'\n        })\n    }\n\n    const { selectedOption } = [];\n       \n    const handleFilter = selectedOption => {\n        console.log(`Option selected:`, selectedOption.value)\n        const categorySelected = selectedOption.value\n        filterPhotos(categorySelected)\n    };\n\n    //const categories = photos.map((photo) => <li key={photo.id}>{photo.category}</li>)\n\n    const location = useLocation()\n    let routeButton\n    location.pathname === '/addphoto' ? routeButton = <Link to=\"/\" className=\"navbar__button\">slider</Link> : routeButton = <Link to=\"/addphoto\" className=\"navbar__button\">add photo</Link>\n\n    return (\n        <nav className=\"navbar\">\n            {/* <div className=\"navbar__category\">currently this categories are available:\n                <ul>\n                    {categories}\n                </ul>\n            </div> */}\n            <Select\n                value={selectedOption}\n                onChange={handleFilter}\n                options={options}\n                styles={styles}\n                placeholder={'filter photos'}\n                theme={theme => ({\n                    ...theme,\n                    borderRadius: 0,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#f82949',\n                      primary: '#f82949',\n                    },\n                  })}\n            />\n            {routeButton}\n        </nav>\n    )\n}\n\nexport default Navbar","import React from 'react'\n\nconst Slide = ({ image, text, category, click }) => {\n    const styles = {\n        backgroundImage: `url(${image})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n    }\n\nreturn (\n        <div className=\"slider__photo\" style={styles}>\n            <h1 className=\"slider__text\">{text}</h1>\n            <h2 className=\"slider__category\">{category}</h2>\n            <div className=\"slider__delete\" onClick={click}></div>\n        </div>\n    )\n}\n\nexport default Slide","import React, { useContext} from 'react'\nimport { PhotoContext } from '../../contexts/PhotoContext'\nimport Slide from '../Slide/Slide'\nimport './Slider.scss'\n\nconst Slider = () => {\n\n    const { photos, leftArrow, rightArrow, translateValue, deletePhoto } = useContext(PhotoContext)\n\n    const deletePhotoHandler = (id) => {\n        deletePhoto(id)\n    }\n\n    const slide = photos.map((photo, i) => (\n        <Slide \n            key={photo.id} \n            image={photo.photo} \n            text={photo.text} \n            category={photo.category} \n            click={() => deletePhotoHandler(i)} \n        />\n    ))\n\n    const slideAnimation = {\n        transform: `translateX(${translateValue}px)`,\n        transition: 'transform ease-in-out 0.2s'\n    }\n\n    return (\n        <div className=\"slider\"> \n            <div className=\"slider__container\" style={slideAnimation}>\n                {slide}\n            </div>\n            <div className=\"slider__arrow slider__arrow-left\" onClick={leftArrow}></div>\n            <div className=\"slider__arrow slider__arrow-right\" onClick={rightArrow}></div> \n        </div>\n    )\n\n}\n\nexport default Slider","import React, { useContext, useRef } from 'react'\nimport { PhotoContext } from '../../contexts/PhotoContext'\nimport './AddPhoto.scss'\n\nconst AddPhoto = () => {\n\n    const { saveImage, newImage, addPhoto } = useContext(PhotoContext)\n\n    const photoInput = useRef()\n\n    const addPhotoButton = () => {\n        photoInput.current.click()\n    }\n\n    const photoSelectHandler = event => {\n        console.log(URL.createObjectURL(event.target.files[0]), 'event target log')\n        saveImage(URL.createObjectURL(event.target.files[0]))\n        getBase64(event.target.files[0]).then(Base64 => {\n            localStorage[\"photoBase64\"] = Base64\n            console.debug('file stored to localS', Base64)\n        })\n    }\n\n    const getBase64 = (file) => {\n        return new Promise((resolve,reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n            reader.readAsDataURL(file);\n        });\n    }\n\n    const fileToLocalStorage = (e) => {\n        e.preventDefault()\n        e.persist()\n        console.log(e.target.text.value, 'id', e.target.category.value, 'category')\n   \n        addPhoto(newImage, e.target.text.value, e.target.category.value)\n    }\n\n    return (\n        <form className=\"add-photo\" onSubmit={fileToLocalStorage}>\n            <input className=\"add-photo__form-input\" style={{display: 'none'}} type=\"file\" onChange={photoSelectHandler} ref={photoInput} />\n            <button className=\"add-photo__form-input navbar__button\" type=\"button\" onClick={addPhotoButton}>pick photo</button>\n            <input className=\"add-photo__form-input\" name=\"text\" id=\"text\" placeholder=\"type some text\" />\n            <input className=\"add-photo__form-input\" name=\"category\" id=\"category\" placeholder=\"add category\" />\n            <button className=\"add-photo__form-input navbar__button\" type=\"submit\">Save</button>\n        </form>\n    )\n}\n\nexport default AddPhoto","import React from 'react';\nimport './App.scss';\nimport { Route } from 'react-router'\nimport Navbar from './components/Navbar/Navbar'\nimport Slider from './components/Slider/Slider'\nimport AddPhoto from './components/AddPhoto/AddPhoto'\nimport PhotoContextProvider from './contexts/PhotoContext';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <PhotoContextProvider>\n                <Navbar />\n                <Route exact path=\"/\" component={Slider} />\n                <Route path=\"/addphoto\" component={AddPhoto} />\n            </PhotoContextProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}